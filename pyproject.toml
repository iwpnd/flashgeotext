[tool.poetry]
name = "flashgeotext"
version = "0.5.3"
description = "Extract and count countries and cities (+their synonyms) from text"
authors = ["Benjamin Ramser <ahoi@iwpnd.pw>"]
license = "MIT"
readme = "readme.md"
homepage = "https://flashgeotext.iwpnd.pw"
repository = "https://github.com/iwpnd/flashgeotext"
keywords = ["geonames", "nlp", "text extraction"]
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
]
include = [
    "LICENSE",
]

[tool.poetry.dependencies]
python = "^3.10.0"
flashtext = "^2.7"
loguru = ">=0.5.3"
pydantic = "^2.7.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
pre-commit = "^3.7.0"
gitlint = ">=0.18,<0.20"
isort = "^5.10.1"
poethepoet = "^0.26.1"
python-semantic-release = "^9.6.0"
ruff = "^0.4.3"
idna = "^3.7"

[tool.semantic_release]
version_variables = [
    "flashgeotext/__init__.py:__version__",
    "pyproject.toml:version",
]

commit_subject = "ci: release v{version}"
branch = "master"
upload_to_release = true
build_command = "pip install poetry --upgrade && poetry build"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "feat",
    "fix",
    "refactor",
    "chore",
    "build",
    "ci",
    "docs",
    "perf",
    "style",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "docs"]

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "chore\\(release\\):",
  "chore\\(deps-dev\\):",
  "build\\(deps-dev\\):",
  "build\\(deps\\):",
  "ci:",
]

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
line-length = 88

# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = ["E501"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[build-system]
requires = ["poetry-core>=1.3.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
test     = "poetry run pytest -vv -s tests/"
test-cov = "poetry run pytest -vv -s --cov=flashgeotext/ tests/ --cov-report xml:/home/runner/coverage.xml"
lint     = "ruff ."
